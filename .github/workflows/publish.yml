name: "publish"
on:
  push:
    # tags: ["v[0-9]+.[0-9]+.[0-9]+*"]
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  IMAGE_NAME: vicanso/charts-rs-web

jobs:
  build:
    timeout-minutes: 3600
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform:
          - { arch: "linux/amd64", tag: "amd64", runs-on: "ubuntu-24.04" }
          - { arch: "linux/arm64", tag: "arm64", runs-on: "ubuntu-24.04-arm" }
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
      - name: Change Swap Space
        run: |
          swapon --show=NAME | tail -n 1
          df -lh

          export SWAP_FILE=/swapfile
          sudo fallocate -l 24G $SWAP_FILE
          sudo chmod 600 $SWAP_FILE
          sudo mkswap $SWAP_FILE
          sudo swapon $SWAP_FILE
      - name: Swap space report after modification
        shell: bash
        run: |
          echo "Memory and swap:"
          free -h
          echo
          swapon --show
          df -lh
          echo
          arch
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform.arch }}
          build-args: |
            GIT_COMMIT_ID=${{ github.sha }}
          tags: ${{ env.IMAGE_NAME }}:${{ matrix.platform.tag }}
          push: true
      - name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
  merge:
    runs-on: ubuntu-24.04
    needs: [build] # 等待所有架构构建完成
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create \
            -t ${{ env.IMAGE_NAME }}:latest \
            ${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.IMAGE_NAME }}:arm64